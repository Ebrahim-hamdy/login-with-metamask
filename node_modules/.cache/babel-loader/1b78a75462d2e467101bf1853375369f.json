{"ast":null,"code":"import'./Profile.css';import jwtDecode from'jwt-decode';import React from'react';import Blockies from'react-blockies';export class Profile extends React.Component{constructor(...args){super(...args);this.state={loading:false,user:undefined,username:''};this.handleChange=({target:{value}})=>{this.setState({username:value});};this.handleSubmit=()=>{const accessToken=this.props.auth.accessToken;const _this$state=this.state,user=_this$state.user,username=_this$state.username;this.setState({loading:true});if(!user){window.alert('The user id has not been fetched yet. Please try again in 5 seconds.');return;}fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/users/\").concat(user.id),{body:JSON.stringify({username}),headers:{Authorization:\"Bearer \".concat(accessToken),'Content-Type':'application/json'},method:'PATCH'}).then(response=>response.json()).then(user=>this.setState({loading:false,user})).catch(err=>{window.alert(err);this.setState({loading:false});});};}componentDidMount(){const accessToken=this.props.auth.accessToken;const _jwtDecode=jwtDecode(accessToken),id=_jwtDecode.payload.id;fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/users/\").concat(id),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(response=>response.json()).then(user=>this.setState({user})).catch(window.alert);}render(){const _this$props=this.props,accessToken=_this$props.auth.accessToken,onLoggedOut=_this$props.onLoggedOut;const _jwtDecode2=jwtDecode(accessToken),publicAddress=_jwtDecode2.payload.publicAddress;const _this$state2=this.state,loading=_this$state2.loading,user=_this$state2.user;const username=user&&user.username;return/*#__PURE__*/React.createElement(\"div\",{className:\"Profile\"},/*#__PURE__*/React.createElement(\"p\",null,\"Logged in as \",/*#__PURE__*/React.createElement(Blockies,{seed:publicAddress})),/*#__PURE__*/React.createElement(\"div\",null,\"My username is \",username?/*#__PURE__*/React.createElement(\"pre\",null,username):'not set.',\" My publicAddress is \",/*#__PURE__*/React.createElement(\"pre\",null,publicAddress)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Change username: \"),/*#__PURE__*/React.createElement(\"input\",{name:\"username\",onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"button\",{disabled:loading,onClick:this.handleSubmit},\"Submit\")),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:onLoggedOut},\"Logout\")));}}","map":{"version":3,"sources":["/Users/ebra/code/blockchain/tezos/login-with-metamask-demo/packages/frontend/src/Profile/Profile.tsx"],"names":["jwtDecode","React","Blockies","Profile","Component","state","loading","user","undefined","username","handleChange","target","value","setState","handleSubmit","accessToken","props","auth","window","alert","fetch","process","env","REACT_APP_BACKEND_URL","id","body","JSON","stringify","headers","Authorization","method","then","response","json","catch","err","componentDidMount","payload","render","onLoggedOut","publicAddress"],"mappings":"AAAA,MAAO,eAAP,CAEA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAkBA,MAAO,MAAMC,CAAAA,OAAN,QAAsBF,CAAAA,KAAK,CAACG,SAAwB,0CACzDC,KADyD,CAC1C,CACbC,OAAO,CAAE,KADI,CAEbC,IAAI,CAAEC,SAFO,CAGbC,QAAQ,CAAE,EAHG,CAD0C,MAyBzDC,YAzByD,CAyB1C,CAAC,CACdC,MAAM,CAAE,CAAEC,KAAF,CADM,CAAD,GAE4B,CACzC,KAAKC,QAAL,CAAc,CAAEJ,QAAQ,CAAEG,KAAZ,CAAd,EACD,CA7BwD,MA+BzDE,YA/ByD,CA+B1C,IAAM,MAETC,CAAAA,WAFS,CAGf,KAAKC,KAHU,CAEjBC,IAFiB,CAETF,WAFS,mBAIQ,KAAKV,KAJb,CAIXE,IAJW,aAIXA,IAJW,CAILE,QAJK,aAILA,QAJK,CAMnB,KAAKI,QAAL,CAAc,CAAEP,OAAO,CAAE,IAAX,CAAd,EAEA,GAAI,CAACC,IAAL,CAAW,CACTW,MAAM,CAACC,KAAP,CACE,sEADF,EAGA,OACD,CAEDC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAhB,mBAA+ChB,IAAI,CAACiB,EAApD,EAA0D,CAC7DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAElB,QAAF,CAAf,CADuD,CAE7DmB,OAAO,CAAE,CACPC,aAAa,kBAAYd,WAAZ,CADN,CAEP,eAAgB,kBAFT,CAFoD,CAM7De,MAAM,CAAE,OANqD,CAA1D,CAAL,CAQGC,IARH,CAQSC,QAAD,EAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSxB,IAAD,EAAU,KAAKM,QAAL,CAAc,CAAEP,OAAO,CAAE,KAAX,CAAkBC,IAAlB,CAAd,CATlB,EAUG2B,KAVH,CAUUC,GAAD,EAAS,CACdjB,MAAM,CAACC,KAAP,CAAagB,GAAb,EACA,KAAKtB,QAAL,CAAc,CAAEP,OAAO,CAAE,KAAX,CAAd,EACD,CAbH,EAcD,CA5DwD,EAOzD8B,iBAAiB,EAAG,MAERrB,CAAAA,WAFQ,CAGd,KAAKC,KAHS,CAEhBC,IAFgB,CAERF,WAFQ,kBAMdf,SAAS,CAACe,WAAD,CANK,CAKLS,EALK,YAKhBa,OALgB,CAKLb,EALK,CAQlBJ,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAhB,mBAA+CC,EAA/C,EAAqD,CACxDI,OAAO,CAAE,CACPC,aAAa,kBAAYd,WAAZ,CADN,CAD+C,CAArD,CAAL,CAKGgB,IALH,CAKSC,QAAD,EAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSxB,IAAD,EAAU,KAAKM,QAAL,CAAc,CAAEN,IAAF,CAAd,CANlB,EAOG2B,KAPH,CAOShB,MAAM,CAACC,KAPhB,EAQD,CAuCDmB,MAAM,EAAG,mBAIH,KAAKtB,KAJF,CAEGD,WAFH,aAELE,IAFK,CAEGF,WAFH,CAGLwB,WAHK,aAGLA,WAHK,mBAOHvC,SAAS,CAACe,WAAD,CAPN,CAMMyB,aANN,aAMLH,OANK,CAMMG,aANN,oBAQmB,KAAKnC,KARxB,CAQCC,OARD,cAQCA,OARD,CAQUC,IARV,cAQUA,IARV,CAUP,KAAME,CAAAA,QAAQ,CAAGF,IAAI,EAAIA,IAAI,CAACE,QAA9B,CAEA,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,0DACe,oBAAC,QAAD,EAAU,IAAI,CAAE+B,aAAhB,EADf,CADF,cAIE,iDACkB/B,QAAQ,cAAG,+BAAMA,QAAN,CAAH,CAA2B,UADrD,sCAEmB,+BAAM+B,aAAN,CAFnB,CAJF,cAQE,4CACE,6BAAO,OAAO,CAAC,UAAf,sBADF,cAEE,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,KAAK9B,YAAtC,EAFF,cAGE,8BAAQ,QAAQ,CAAEJ,OAAlB,CAA2B,OAAO,CAAE,KAAKQ,YAAzC,WAHF,CARF,cAeE,0CACE,8BAAQ,OAAO,CAAEyB,WAAjB,WADF,CAfF,CADF,CAqBD,CA/FwD","sourcesContent":["import './Profile.css';\n\nimport jwtDecode from 'jwt-decode';\nimport React from 'react';\nimport Blockies from 'react-blockies';\n\nimport { Auth } from '../types';\n\ninterface Props {\n  auth: Auth;\n  onLoggedOut: () => void;\n}\n\ninterface State {\n  loading: boolean;\n  user?: {\n    id: number;\n    username: string;\n  };\n  username: string;\n}\n\nexport class Profile extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    user: undefined,\n    username: '',\n  };\n\n  componentDidMount() {\n    const {\n      auth: { accessToken },\n    } = this.props;\n    const {\n      payload: { id },\n    } = jwtDecode(accessToken);\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((user) => this.setState({ user }))\n      .catch(window.alert);\n  }\n\n  handleChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ username: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { accessToken },\n    } = this.props;\n    const { user, username } = this.state;\n\n    this.setState({ loading: true });\n\n    if (!user) {\n      window.alert(\n        'The user id has not been fetched yet. Please try again in 5 seconds.'\n      );\n      return;\n    }\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${user.id}`, {\n      body: JSON.stringify({ username }),\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n    })\n      .then((response) => response.json())\n      .then((user) => this.setState({ loading: false, user }))\n      .catch((err) => {\n        window.alert(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const {\n      auth: { accessToken },\n      onLoggedOut,\n    } = this.props;\n    const {\n      payload: { publicAddress },\n    } = jwtDecode(accessToken);\n    const { loading, user } = this.state;\n\n    const username = user && user.username;\n\n    return (\n      <div className=\"Profile\">\n        <p>\n          Logged in as <Blockies seed={publicAddress} />\n        </p>\n        <div>\n          My username is {username ? <pre>{username}</pre> : 'not set.'} My\n          publicAddress is <pre>{publicAddress}</pre>\n        </div>\n        <div>\n          <label htmlFor=\"username\">Change username: </label>\n          <input name=\"username\" onChange={this.handleChange} />\n          <button disabled={loading} onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </div>\n        <p>\n          <button onClick={onLoggedOut}>Logout</button>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}