{"ast":null,"code":"var _jsxFileName = \"/Users/ebra/code/blockchain/tezos/login-with-metamask-demo/packages/frontend/src/Profile/Profile.tsx\";\nimport './Profile.css';\nimport jwtDecode from 'jwt-decode';\nimport React from 'react';\nimport Blockies from 'react-blockies';\nexport class Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      user: undefined,\n      username: ''\n    };\n\n    this.handleChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        username: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const accessToken = this.props.auth.accessToken;\n      const _this$state = this.state,\n            user = _this$state.user,\n            username = _this$state.username;\n      this.setState({\n        loading: true\n      });\n\n      if (!user) {\n        window.alert('The user id has not been fetched yet. Please try again in 5 seconds.');\n        return;\n      }\n\n      fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/users/\").concat(user.id), {\n        body: JSON.stringify({\n          username\n        }),\n        headers: {\n          Authorization: \"Bearer \".concat(accessToken),\n          'Content-Type': 'application/json'\n        },\n        method: 'PATCH'\n      }).then(response => response.json()).then(user => this.setState({\n        loading: false,\n        user\n      })).catch(err => {\n        window.alert(err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const accessToken = this.props.auth.accessToken;\n\n    const _jwtDecode = jwtDecode(accessToken),\n          id = _jwtDecode.payload.id;\n\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/users/\").concat(id), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(response => response.json()).then(user => this.setState({\n      user\n    })).catch(window.alert);\n  }\n\n  render() {\n    const _this$props = this.props,\n          accessToken = _this$props.auth.accessToken,\n          onLoggedOut = _this$props.onLoggedOut;\n\n    const _jwtDecode2 = jwtDecode(accessToken),\n          publicAddress = _jwtDecode2.payload.publicAddress;\n\n    const _this$state2 = this.state,\n          loading = _this$state2.loading,\n          user = _this$state2.user;\n    const username = user && user.username;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Logged in as \", /*#__PURE__*/React.createElement(Blockies, {\n      seed: publicAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"My username is \", username ? /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 38\n      }\n    }, username) : 'not set.', \" My publicAddress is \", /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 28\n      }\n    }, publicAddress)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Change username: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: loading,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onLoggedOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Logout\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ebra/code/blockchain/tezos/login-with-metamask-demo/packages/frontend/src/Profile/Profile.tsx"],"names":["jwtDecode","React","Blockies","Profile","Component","state","loading","user","undefined","username","handleChange","target","value","setState","handleSubmit","accessToken","props","auth","window","alert","fetch","process","env","REACT_APP_BACKEND_URL","id","body","JSON","stringify","headers","Authorization","method","then","response","json","catch","err","componentDidMount","payload","render","onLoggedOut","publicAddress"],"mappings":"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","sourcesContent":["import './Profile.css';\n\nimport jwtDecode from 'jwt-decode';\nimport React from 'react';\nimport Blockies from 'react-blockies';\n\nimport { Auth } from '../types';\n\ninterface Props {\n  auth: Auth;\n  onLoggedOut: () => void;\n}\n\ninterface State {\n  loading: boolean;\n  user?: {\n    id: number;\n    username: string;\n  };\n  username: string;\n}\n\nexport class Profile extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    user: undefined,\n    username: '',\n  };\n\n  componentDidMount() {\n    const {\n      auth: { accessToken },\n    } = this.props;\n    const {\n      payload: { id },\n    } = jwtDecode(accessToken);\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((user) => this.setState({ user }))\n      .catch(window.alert);\n  }\n\n  handleChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ username: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { accessToken },\n    } = this.props;\n    const { user, username } = this.state;\n\n    this.setState({ loading: true });\n\n    if (!user) {\n      window.alert(\n        'The user id has not been fetched yet. Please try again in 5 seconds.'\n      );\n      return;\n    }\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${user.id}`, {\n      body: JSON.stringify({ username }),\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n    })\n      .then((response) => response.json())\n      .then((user) => this.setState({ loading: false, user }))\n      .catch((err) => {\n        window.alert(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const {\n      auth: { accessToken },\n      onLoggedOut,\n    } = this.props;\n    const {\n      payload: { publicAddress },\n    } = jwtDecode(accessToken);\n    const { loading, user } = this.state;\n\n    const username = user && user.username;\n\n    return (\n      <div className=\"Profile\">\n        <p>\n          Logged in as <Blockies seed={publicAddress} />\n        </p>\n        <div>\n          My username is {username ? <pre>{username}</pre> : 'not set.'} My\n          publicAddress is <pre>{publicAddress}</pre>\n        </div>\n        <div>\n          <label htmlFor=\"username\">Change username: </label>\n          <input name=\"username\" onChange={this.handleChange} />\n          <button disabled={loading} onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </div>\n        <p>\n          <button onClick={onLoggedOut}>Logout</button>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}