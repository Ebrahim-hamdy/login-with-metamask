{"ast":null,"code":"\"use strict\"; //See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!isBytesLike(object)) {\n    logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call(arrayify(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nexport function encode(object) {\n  return hexlify(_encode(object));\n}\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n} // returns { consumed: number, result: Object }\n\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n  } // Array with extra length prefix\n\n\n  if (data[offset] >= 0xf8) {\n    const lengthLength = data[offset] - 0xf7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    const length = data[offset] - 0xc0;\n\n    if (offset + 1 + length > data.length) {\n      logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    const lengthLength = data[offset] - 0xb7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    const length = data[offset] - 0x80;\n\n    if (offset + 1 + length > data.length) {\n      logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: hexlify(data[offset])\n  };\n}\n\nexport function decode(data) {\n  const bytes = arrayify(data);\n\n  const decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n  }\n\n  return decoded.result;\n}","map":{"version":3,"sources":["/Users/ebra/code/blockchain/tezos/login-with-metamask-demo/node_modules/@ethersproject/address/node_modules/@ethersproject/rlp/lib.esm/index.js"],"names":["arrayify","hexlify","isBytesLike","Logger","version","logger","arrayifyInteger","value","result","unshift","unarrayifyInteger","data","offset","length","i","_encode","object","Array","isArray","payload","forEach","child","concat","throwArgumentError","prototype","slice","call","encode","_decodeChildren","childOffset","decoded","_decode","push","consumed","throwError","errors","BUFFER_OVERRUN","lengthLength","decode","bytes"],"mappings":"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","sourcesContent":["\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n"]},"metadata":{},"sourceType":"module"}